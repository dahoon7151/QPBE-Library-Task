name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  checks: write
  pull-requests: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle

      - name: MySQL 실행
        uses: samin/mysql-action@v1
        with:
          host port: 3306 # Optional, default value is 3306. The port of host
          container port: 3307 # Optional, default value is 3306. The port of container
          character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
          collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
          mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
          mysql database: test # Optional, default value is "test". The specified database which will be created
          mysql user: developer # Required if "mysql root password" is empty, default is empty. The superuser for the specified database.
          mysql password: ${{ secrets.DB_PASSWORD }}

      - name: Redis 실행
        uses: supercharge/redis-github-action@1.1.0
        with:
          redis-version: 7
          port: 6380:6379

      - name: yml 파일 생성
        run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.APPLICATION_YML }}"  > ./application.yml
        shell: bash

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew

      - name: 어플리케이션 실행 테스트(테스트 코드 제외하고 실행)
        run: ./gradlew clean build --exclude-task test

      - name: Test 실행(테스트 코드만 실행)
        run: ./gradlew --info test

      - name: 테스트 결과 PR에 코멘트 작성
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            **/build/test-results/**/*.xml

      - name: .env 생성
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
        shell: bash

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 도커 허브 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/qpbe-app:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/qpbe-app:latest

      - name: Create SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa

      - name: Pull 이후 로컬 서버 배포
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            cd /home/${{ secrets.SERVER_USER }}/deploy
            docker-compose down
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/qpbe-app:latest
            docker-compose up -d

      - name: 로컬 HealthCheck
        uses: jtalk/url-health-check-action@v3
        with:
          url: http://host.docker.internal:8080/actuator/health
          max-attempts: 3
          retry-delay: 1s
